package com.freetuition.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;


//@Entity marks this class as an entity, 
//meaning that we intend to map this class to a table in our database.
 
@Entity
@Table(name = "request", schema="freetuition")

public class Request {
	
	//The @Id annotation denotes that we wish to use this field as a primary key on this table.
	@Id
	//The @Column annotation denotes that we want this field to represent a column on our table.
	
	@Column(name = "request_id")
	/*
	 * The @GeneratedValue annotation specifies that the value of the data in
	 * this column is generated by a sequence. For example, the serial data
	 * type in Postgres has an underlying sequence which is used to generate
	 * the next value which should be inserted on our table in this column.
	 */
	@GeneratedValue(generator = "request_id_seq", strategy = GenerationType.AUTO)
	@SequenceGenerator(allocationSize = 1, name = "request_id_seq", sequenceName = "request_id_seq")
	private int requestId;
	
	//One to one relationship
	@JoinColumn
	@OneToOne  //eagarly fetch - hib-te automaticly join, no need to write query
	private Employee employee;
	
	@Column
	private String school;
	
	@Column
	private String course;
	
	@Column
	private double price;
	
	@Column
	private String status;
	
	@Column
	private String receipt;
	
	//One to one relationship
	@JoinColumn
	@OneToOne  //eagarly fetch - hib-te automaticly join, no need to write query
	private Employee manager;
	
	@Column
	private String comments;
	
	public Request( ) {}

	public Request(int requestId, Employee employee, String school, String course, double price, String status,
			String receipt, Employee manager, String comments) {
		super();
		this.requestId = requestId;
		this.employee = employee;
		this.school = school;
		this.course = course;
		this.price = price;
		this.status = status;
		this.receipt = receipt;
		this.manager = manager;
		this.comments = comments;
	}

	public int getRequestId() {
		return requestId;
	}

	public void setRequestId(int requestId) {
		this.requestId = requestId;
	}

	public Employee getEmployee() {
		return employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	public String getSchool() {
		return school;
	}

	public void setSchool(String school) {
		this.school = school;
	}

	public String getCourse() {
		return course;
	}

	public void setCourse(String course) {
		this.course = course;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getReceipt() {
		return receipt;
	}

	public void setReceipt(String receipt) {
		this.receipt = receipt;
	}

	public Employee getManager() {
		return manager;
	}

	public void setManager(Employee manager) {
		this.manager = manager;
	}

	public String getComments() {
		return comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((comments == null) ? 0 : comments.hashCode());
		result = prime * result + ((course == null) ? 0 : course.hashCode());
		result = prime * result + ((employee == null) ? 0 : employee.hashCode());
		result = prime * result + ((manager == null) ? 0 : manager.hashCode());
		long temp;
		temp = Double.doubleToLongBits(price);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result + ((receipt == null) ? 0 : receipt.hashCode());
		result = prime * result + requestId;
		result = prime * result + ((school == null) ? 0 : school.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Request other = (Request) obj;
		if (comments == null) {
			if (other.comments != null)
				return false;
		} else if (!comments.equals(other.comments))
			return false;
		if (course == null) {
			if (other.course != null)
				return false;
		} else if (!course.equals(other.course))
			return false;
		if (employee == null) {
			if (other.employee != null)
				return false;
		} else if (!employee.equals(other.employee))
			return false;
		if (manager == null) {
			if (other.manager != null)
				return false;
		} else if (!manager.equals(other.manager))
			return false;
		if (Double.doubleToLongBits(price) != Double.doubleToLongBits(other.price))
			return false;
		if (receipt == null) {
			if (other.receipt != null)
				return false;
		} else if (!receipt.equals(other.receipt))
			return false;
		if (requestId != other.requestId)
			return false;
		if (school == null) {
			if (other.school != null)
				return false;
		} else if (!school.equals(other.school))
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		} else if (!status.equals(other.status))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Request [requestId=" + requestId + ", employee=" + employee + ", school=" + school + ", course="
				+ course + ", price=" + price + ", status=" + status + ", receipt=" + receipt + ", manager=" + manager
				+ ", comments=" + comments + "]";
	}



	
}